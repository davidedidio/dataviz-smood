/*
Inspired by https://dribbble.com/shots/2004657-Alarm-Clock-concept
 */

class Clock{

  constructor(data){
    this.data = data
    $('button#start_button').click(() => {
      this.index = 0;
      this.intervalLoop();
      this.interval = setInterval(() => {
          this.intervalLoop();
      }, 2000);
  	});

    TweenMax.staggerFrom(".clockArc", .5, {
      drawSVG: 0,
      ease: Power3.easeOut
    }, 0.3);
    TweenMax.from("#time", 1.0, {
      attr: {
        y: 150
      },
      opacity: 0,
      ease: Power3.easeOut,
      delay: 0.5
    });
  }

  intervalLoop(){
    this.setCaptions(this.data[this.index].time)
    heatmap.show_roads_with_ids(this.data[this.index].ids)

    this.index++;
    if(this.index > this.data.length-1){
      clearInterval(this.interval);
    }
  }

  polarToCartesian(centerX, centerY, radius, angleInDegrees) {
    var angleInRadians;
    angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
    return {
      x: centerX + radius * Math.cos(angleInRadians),
      y: centerY + radius * Math.sin(angleInRadians)
    };
  };

  describeArc(x, y, radius, startAngle, endAngle) {
    var arcSweep, end, start;
    start = this.polarToCartesian(x, y, radius, endAngle);
    end = this.polarToCartesian(x, y, radius, startAngle);
    arcSweep = endAngle - startAngle <= 180 ? '0' : '1';
    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');
  };

  setCaptions(time) {
    if(time == "all"){
      $('#time').text("No Time");
    }else{
      let STime = time.split(":");
      let hour = parseInt(STime[0]);
      let min = parseInt(STime[1]);
      let hourArc = ((hour * 60 + min) % (12 * 60))/ (12 * 60) * 360;
      $('.clockArc.hour').attr('d', this.describeArc(150, 150, 80, 0, hourArc));
      $('.clockDot.hour').attr('d', this.describeArc(150, 150, 80, hourArc - 3, hourArc));
      let dot = $(".clockDot.hour");
      let pos = this.polarToCartesian(150, 150, 80, hourArc);
      dot.attr("cx", pos.x);
      dot.attr("cy", pos.y);
      $('#time').text(time);
    }

  };

}


// ---
// generated by coffee-script 1.9.2
